"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Vundle
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible
if &shell =~# 'fish$'
    set shell=/usr/bin/bash
endif
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
call vundle#begin()
Plugin 'The-NERD-tree'
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | end
Plugin 'Xuyuanp/nerdtree-git-plugin'
let g:NERDTreeIndicatorMapCustom = {
    \    "Modified"  : "✹",
    \    "Staged"    : "✚",
    \    "Untracked" : "✭",
    \    "Renamed"   : "➜",
    \    "Unmerged"  : "═",
    \    "Deleted"   : "✖",
    \    "Dirty"     : "✗",
    \    "Clean"     : "✔︎",
    \    "Unknown"   : "?"
\ }
Plugin 'ap/vim-buftabline'
let g:buftabline_numbers = 2
let g:buftabline_indicators = 1
Plugin 'Tagbar'
let g:tagbar_iconchars = ['▸', '▾']
let g:tagbar_width = 25
let g:tagbar_compact = 1
autocmd BufWinEnter * nested :call tagbar#autoopen(1)
Plugin 'a.vim'
Plugin 'ctrlp.vim'
Plugin 'surround.vim'
Plugin 'jiangmiao/auto-pairs'
Plugin 'StanAngeloff/php.vim'
Plugin 'vim-perl/vim-perl'
Plugin 'Valloric/MatchTagAlways'
Plugin 'mbriggs/mark.vim'
Plugin 'hdima/python-syntax'
let g:python_highlight_all = 1
Plugin 'octol/vim-cpp-enhanced-highlight'
" For markdown hightlight
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled=1
let g:vim_markdown_frontmatter=1
let g:vim_markdown_frontmatter=1
Plugin 'davidhalter/jedi-vim'
Plugin 'Yggdroot/indentLine'
let g:indentLine_char = '|'
let g:indentLine_color_term = 239
let g:indentLine_color_gui = '#A4E57E'
let g:indentLine_color_tty_light = 4
let g:indentLine_color_dark = 2
let g:indentLine_bgcolor_gui = '#FF5F00'
" markdown hightlient end
Plugin 'iamcco/markdown-preview.vim'
let g:mkdp_path_to_chrome = '/usr/bin/firefox'
Plugin 'Valloric/YouCompleteMe'
"do the following things to finish install
"cd ~/.vim/bundle/YouCompleteMe
"./install --clang-completer
let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
let g:ycm_error_symbol = '>>'
let g:ycm_warning_symbol = '!'
let g:ycm_autoclose_preview_window_after_completion = 1
" preview window location at bottom
set splitbelow
call vundle#end()
filetype on
filetype plugin on     " required! 
filetype indent on     " required! 
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => My Configuration
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Themes and colors
set t_Co=256
syntax enable
colorscheme desert
set background=dark
"Sets how many lines of history VIM har to remember
set history=400
"set to auto change current divrectory to current editing file's directory
"set autochdir
"Have the mouse enabled all the time:
set mouse=a

"Set mapleader
let mapleader = ","
let g:mapleader = ","

nmap <leader>w :w!<cr>
nmap <leader>x :x <cr>

map <leader>t :NERDTreeToggle<cr>

nmap <leader>1 <Plug>BufTabLine.Go(1)
nmap <leader>2 <Plug>BufTabLine.Go(2)
nmap <leader>3 <Plug>BufTabLine.Go(3)
nmap <leader>4 <Plug>BufTabLine.Go(4)
nmap <leader>5 <Plug>BufTabLine.Go(5)
nmap <leader>6 <Plug>BufTabLine.Go(6)
nmap <leader>7 <Plug>BufTabLine.Go(7)
nmap <leader>8 <Plug>BufTabLine.Go(8)
nmap <leader>9 <Plug>BufTabLine.Go(9)
nmap <leader>0 <Plug>BufTabLine.Go(10)

"nmap <leader>q :call <SID>quit()<cr>
"fast move between window

"internationalization
"I only work in Win2k Chinese version
if has("multi_byte")
  set encoding=utf-8
  set fileencodings=utf-8,chinese,latin-1
  if has("win32")
	  set encoding=utf-8
	  set fileencoding=utf-8
  else
	  set encoding=utf-8
	  set fileencoding=utf-8
  endif
  language messages zh_CN.utf-8
endif

"if you use vim in tty,
"'uxterm -cjk' or putty with option 'Treat CJK ambiguous characters as wide' on
if exists("&ambiwidth")
	set ambiwidth=double
endif

if has("gui_running")
	set guioptions-=m
	set guioptions-=T
	set guioptions+=bh
	"set guioptions-=l
	"set guioptions-=L
	"set guioptions-=r
	"set guioptions-=R
	set lines=40
	set columns=180
	"set nowrap
	set wrap
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Fileformat
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set ffs=unix,dos,mac

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM userinterface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Set 7 lines to the curors - when moving vertical..
set so=7
"Always show current position
set ruler
"The commandbar height
set cmdheight=1
"Show line number
set nu
"Change buffer - without saving
set hid
"Bbackspace and cursor keys wrap to
set whichwrap+=<,>,h,l
"Ignore case when searching
set ignorecase
set incsearch
"Set magic on
set magic
"show matching bracet
set showmatch
"How many tenths of a second to blink
set mat=4
"Highlight search thing
set hlsearch

""""""""""""""""""""""""""""""
" => Statusline
""""""""""""""""""""""""""""""
"Format the statusline
"define 3 custom highlight groups
hi User1 ctermbg=green ctermfg=red   guibg=green guifg=red
hi User2 ctermbg=gray   ctermfg=black  guibg=gray   guifg=black
hi User3 ctermbg=blue  ctermfg=green guibg=blue  guifg=green
hi User4 ctermbg=black  ctermfg=red guibg=green  guifg=red

"Highlight current
if exists("&cursorline")
	highlight CursorLine   cterm=NONE ctermbg=black guibg=black guifg=white
	set cursorline
endif
if exists("&cursorcolumn")
	highlight CursorColumn cterm=NONE ctermbg=black guibg=black guifg=white
	set cursorcolumn
endif
if exists("&colorcolumn")
	highlight colorcolumn cterm=NONE ctermbg=235 guibg=black guifg=white
	"set cc=90
    "let &colorcolumn=join(range(90,999),",")
endif
sign define dummy
execute 'sign place 9999 line=1 name=dummy buffer=' . bufnr('')
highlight clear SignColumn


set laststatus=2
function! s:setStatusLine()
  if bufname('%') != '-MiniBufExplorer-'
	setlocal statusline=
	setlocal statusline+=%2*%-3.3n%0*\ " buffer number
	setlocal statusline+=%F\ " file name and line,colume-verticle_colume number
	setlocal statusline+=%h%4*%m%r%w%0* " flag
	setlocal statusline+=%3*[
	if v:version >= 600
		setlocal statusline+=%{strlen(&ft)?&ft:'none'}, " filetype
		setlocal statusline+=%{&encoding}, " encoding
	endif
	setlocal statusline+=%{&fileformat}]%0* " file format
	setlocal statusline+=%= " right align
	setlocal statusline+=%-10.(\%L/%l:%c%\)\ " line info
	setlocal statusline+=%2*0x%-8B\ " current char
	setlocal statusline+=%<%P " offset
  endif
endfunction

autocmd BufWinEnter * call s:setStatusLine()

" Nice window title
if has('title') && (has('gui_running') || &title)
	set titlestring=
	set titlestring+=%f\ " file name
	set titlestring+=%h%m%r%w " flag
	set titlestring+=\ -\ %{v:progname} " program name
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Moving around and tab
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Use the arrows to something usefull
map <right> :bn<cr>
map <left> :bp<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Buffer realted
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Fast open a buffer by search for a name
"map <c-q> :sb

"Restore cursor to file position in previous editing session
set viminfo='10,"100,:20,%,n~/.viminfo

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Files and backup
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Turn backup off
set nobackup
set nowb
set noswapfile

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Folding
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Enable folding, I find it very useful
if exists("&foldenable")
	set fen
endif

if exists("&foldlevel")
	set fdl=0
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text option
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" python script
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set lbr
"set tw=500

""""""""""""""""""""""""""""""
" => Indent
""""""""""""""""""""""""""""""
"Auto indent
set ai
"Smart indet
set si
"C-style indenting
"set cindent

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => MISC
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"set font
set gfn=Terminal,h10,cANSI
set gfw=Terminal,h10.5,cGB2312

"set fold method
set foldmethod=manual
"set timeout
set timeout timeoutlen=300 ttimeoutlen=100

nmap <space> :
function! <SID>add_cscope_ctags()
    if filereadable("./cscope.out")
            silent! execute "cs add cscope.out"
    endif
    if filereadable("./ctags")
            silent! execute "set tags+=ctags"
    endif
endfunction
autocmd VimEnter * call <SID>add_cscope_ctags()
